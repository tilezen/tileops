logging: {config: /etc/tilequeue/logging.conf}
rawr:
  group-zoom: 10
  sources: [osm, wof, water_polygons, land_polygons, ne_10m_urban_areas, admin_areas, buffered_land]
  postgresql:
    host: ...
    port: 5432
    dbname: ...
    user: ...
    password: ...
    # fail if a connection can't be made in 10 seconds. the default is to wait forever, which can be a
    # problem as it causes Batch jobs to wait forever and clog up the job queue - better that the job
    # fails and can be retried later. note that the value is a _string_, as per the PostgreSQL docs.
    connect_timeout: "10"
  source:
    type: s3
    table-sources:
      planet_osm_line: &osm { name: osm, value: openstreetmap.org }
      planet_osm_point: *osm
      planet_osm_polygon: *osm
      planet_osm_ways: *osm
      planet_osm_rels: *osm
      wof_neighbourhood: { name: wof, value: whosonfirst.org }
      water_polygons: &osmdata { name: shp, value: openstreetmapdata.com }
      land_polygons: *osmdata
      ne_10m_urban_areas: { name: ne, value: naturalearthdata.com }
      admin_areas: *osm
      buffered_land: { name: shp, value: tilezen.org }
  sink:
    type: s3
    s3:
      bucket: ...
      region: ...
      prefix: ...
      extension: zip
      key-format-type: hash-prefix
      tags: {}
  label-placement-layers:
    point: ['earth', 'water']
    polygon: ['buildings', 'earth', 'landuse', 'water']
    linestring: ['earth', 'landuse']
  indexes:
    - type: osm
    - type: simple
      table: wof_neighbourhood
      layer: places
    - type: simple
      table: water_polygons
      layer: water
    - type: simple
      table: land_polygons
      layer: earth
    - type: simple
      table: ne_10m_urban_areas
      layer: landuse
      end_zoom: 10
    - type: simple
      table: admin_areas
      layer: admin_areas
    - type: simple
      table: buffered_land
      layer: boundaries
  intersect: {type: none}
use-rawr-tiles: true
batch:
  queue-zoom: 7
  check-metatile-exists: true
